* {
  margin: 0;
  padding: 0;
}

/* react全局样式 */
.div {
  padding: 30px;
  background-color: orange;
  color: #fff;
}

.item {
  padding: 10px;
  color: greenyellow !important;
}

/* ********************************************************************** */
/* 圣杯布局方法1 */
.wrap {
  position: relative;
  /* 设置width: 100%;会出问题。会出现滚动条，实际宽度为100%+400px */
  width: 100%;
  /* 设置父盒子padding，为css3的盒模型  padding + border + width==width */
  padding: 0 200px;
  /* 解决上述问题 */
  box-sizing: border-box;
}

.left,
.right {
  position: absolute;
  width: 200px;
  height: 100px;
  background-color: pink;
}

.left {
  /* float: left; */
  top: 0;
  left: 0;
}

.right {
  /* float: right; */
  top: 0;
  right: 0;
}

/* 右边盒子会掉下来
    中间元素为块级元素，标准流，会影响后面的元素
*/
.center {
  /* margin: 0 200px; */
  background-color: tomato;
}

/* ********************************************************************** */
/* 圣杯布局方法2 */
.wrap {
  position: relative;

}

.left,
.right {
  position: absolute;
  top: 0;
  width: 200px;
  height: 100px;
  background-color: pink;
}

.left {
  left: 0;
}

.right {
  right: 0;
}

.center {
  /* 中间元素不能加width:100%; */
  margin: 0 200px;
  background-color: tomato;
}

/* ********************************************************************** */
/* 圣杯布局方法3 */
.wrap {
  /* position: relative; */
  /* 设置width: 100%;会出问题。会出现滚动条，实际宽度为100%+400px */
  width: 100%;
  /* padding: 0 200px; */
  /* 解决上述问题 */
  box-sizing: border-box;
}

.left,
.right {
  /* position: absolute;
  top: 0; */
  width: 200px;
  height: 100px;
  background-color: pink;
}

.left {
  float: left;
  /* left: 0; */
}

.right {
  float: right;
  /* right: 0; */
}

/* 右边盒子会掉下来
  中间元素为块级元素，标准流，会影响后面的元素
  ||
  改变盒子顺序 =>不推荐
*/
.center {
  overflow: hidden;
  margin: 0 200px;
  background-color: tomato;
}